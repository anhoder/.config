# vim:fileencoding=utf-8:foldmethod=marker

# https://sw.kovidgoyal.net/kitty/conf/

# shell /opt/homebrew/bin/fish

linux_display_server x11

# To get a full list of supported fonts use the `kitty +list-fonts` command.
# font_family      Monaco
# font_family      MesloLGL Nerd Font Regular
# bold_font        MesloLGL Nerd Font Bold
# italic_font      MesloLGL Nerd Font Italic
# bold_italic_font MesloLGL Nerd Font Bold Italic
# font_family      JetBrainsMono Nerd Font Regular
# bold_font        JetBrainsMono Nerd Font Bold
# italic_font      JetBrainsMono Nerd Font Italic
# bold_italic_font JetBrainsMono Nerd Font Bold Italic

# BEGIN_KITTY_FONTS
font_family      family='JetBrainsMono Nerd Font Mono'
bold_font        family='JetBrainsMono Nerd Font Mono' style='Bold'
italic_font      family='JetBrainsMono Nerd Font Mono' style='Italic'
bold_italic_font family='JetBrainsMono Nerd Font Mono' style='Bold Italic'
# END_KITTY_FONTS

symbol_map U+E5FA-U+E62B Symbols Nerd Font
symbol_map U+E700-U+E7C5 Symbols Nerd Font
symbol_map U+F000-U+F2E0 Symbols Nerd Font
symbol_map U+E200-U+E2A9 Symbols Nerd Font
symbol_map U+F500-U+FD46 Symbols Nerd Font
symbol_map U+E300-U+E3EB Symbols Nerd Font
symbol_map U+F400-U+F4A8,U+2665,U+26A1,U+F27C Symbols Nerd Font
symbol_map U+E0A3,U+E0B4-U+E0C8,U+E0CC-U+E0D2,U+E0D4 Symbols Nerd Font
symbol_map U+23FB-U+23FE,U+2b58 Symbols Nerd Font
symbol_map U+F300-U+F313 Symbols Nerd Font
symbol_map U+E000-U+E00D Symbols Nerd Font
symbol_map U+f101-U+f208 Symbols Nerd Font


# modify_font cell_height +2px
font_size 15.0

macos_option_as_alt yes
macos_titlebar_color dark
macos_quit_when_last_window_closed true

scrollback_lines 8000
# scrollback_pager nvim -u NONE -R -M -c 'lua require("kitty+page")(INPUT_LINE_NUMBER, CURSOR_LINE, CURSOR_COLUMN)' -
scrollback_pager nvim -c 'lua require("kitty+page")(INPUT_LINE_NUMBER, CURSOR_LINE, CURSOR_COLUMN)' -
# touch_scroll_multiplier 5.0

paste_actions quote-urls-at-prompt

strip_trailing_spaces never

select_by_word_characters @-./_~?&=%+#

click_interval 0.2


# hide_window_decorations titlebar-only
hide_window_decorations no
#macos_show_window_title_in none
#macos_menubar_title_max_length 0


# unmap left click for open link (easy miss click)
mouse_map left click ungrabbed no-op

#: Click the link under the mouse or move the cursor
# mouse_map ctrl+left click ungrabbed mouse_handle_click selection prompt
# mouse_map ctrl+left click ungrabbed mouse_handle_click link
mouse_map cmd+left click ungrabbed mouse_handle_click link prompt

mouse_map ctrl+left press ungrabbed mouse_selection normal

mouse_map right press ungrabbed copy_to_clipboard

remember_window_size  yes
initial_window_width  640
initial_window_height 400

#: If enabled, the window size will be remembered so that new
#: instances of kitty will have the same size as the previous
#: instance. If disabled, the window will initially have size
#: configured by initial_window_width/height, in pixels. You can use a
#: suffix of "c" on the width/height values to have them interpreted
#: as number of cells instead of pixels.

# fat -- One (or optionally more) windows are shown full width on the top, the rest of the windows are shown side-by-side on the bottom
# grid -- All windows are shown in a grid
# horizontal -- All windows are shown side-by-side
# splits -- Windows arranged in arbitrary patterns created using horizontal and vertical splits
# stack -- Only a single maximized window is shown at a time
# tall -- One (or optionally more) windows are shown full height on the left, the rest of the windows are shown one below the other on the right
# vertical -- All windows are shown one below the other

enabled_layouts tall:bias=55;full_size=1;mirrored=false,splits,fat,stack
#enabled_layouts all

map alt+1 goto_layout tall:bias=55;full_size=1;mirrored=false
map alt+2 goto_layout splits
map alt+3 goto_layout fat
map alt+4 goto_layout stack
map alt+/ toggle_layout stack

# https://sw.kovidgoyal.net/kitty/layouts/#the-splits-layout
include splits.conf

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. Default configuration is all
#: layouts in alphabetical order. For a list of available layouts, see
#: the https://sw.kovidgoyal.net/kitty/overview/#layouts.

window_resize_step_cells 2
window_resize_step_lines 2

#: The step size (in units of cell width/cell height) to use when
#: resizing kitty windows in a layout with the keyboard
#: (start_resizing_window). The cells value is used for horizontal
#: resizing and the lines value for vertical resizing.

window_padding_width 0 0 0 0
window_border_width 1.5pt
active_border_color #cdcdcd 
inactive_border_color #595959
inactive_text_alpha 0.7

url_style straight

enable_audio_bell no
visual_bell_duration 0.1
visual_bell_color #595959


visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ

#: The list of characters to use for visual window selection (for
#: example for selecting a window to focus with focus_visible_window).
#: The value should be a series of unique numbers or alphabets, case
#: insensitive, from the set [0-9A-Z]. Specify your preference as a
#: string of characters.

# with Shell integration enabled, using negative values means windows sitting at a shell prompt are not counted,
# only windows where some command is currently running.
# see https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.confirm_os_window_close
confirm_os_window_close -1

# tab_bar_style fade
tab_bar_edge bottom
tab_bar_style fade
tab_bar_align left
tab_fade 0.15 0.3 0.45 0.6 0.75 0.9 1
# tab_powerline_style round
active_tab_font_style bold
inactive_tab_font_style italic
tab_title_max_length 30

# emoji from https://emojipedia.org/regional-indicator-symbol-letter-z/
# title parse see https://github.com/kovidgoyal/kitty/blob/587f44ad4eb7fe545b0e580168cf0c32117b87c7/kitty/tab_bar.py#L175
# tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}({num_windows}) {'fish' if tab.active_exe == '-fish' else tab.active_exe}"
# active_tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{tab.wd}"



#: The foreground and background colors

#background_opacity 0.95
background_opacity 0.75
background_blur 30


background_image none

#: Path to a background image. Must be in PNG format.

background_image_layout tiled

#: Whether to tile, scale or clamp the background image. The value can
#: be one of tiled, mirror-tiled, scaled, clamped.

background_image_linear no

#: When background image is scaled, whether linear interpolation
#: should be used.

dynamic_background_opacity yes

#: Allow changing of the background_opacity dynamically, using either
#: keyboard shortcuts (increase_background_opacity and
#: decrease_background_opacity) or the remote control facility.
#: Changing this setting by reloading the config is not supported.



allow_remote_control yes

#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc.  Note that this even works over ssh
#: connections. You can chose to either allow any program running
#: within kitty to control it, with yes or only programs that connect
#: to the socket specified with the kitty --listen-on command line
#: option, if you use the value socket-only. The latter is useful if
#: you want to prevent programs running on a remote computer over ssh
#: from controlling kitty. Reloading the config will not affect this
#: setting.

listen_on none

#: Tell kitty to listen to the specified unix/tcp socket for remote
#: control connections. Note that this will apply to all kitty
#: instances. It can be overridden by the kitty --listen-on command
#: line flag. This option accepts only UNIX sockets, such as
#: unix:${TEMP}/mykitty or (on Linux) unix:@mykitty. Environment
#: variables are expanded. If {kitty_pid} is present then it is
#: replaced by the PID of the kitty process, otherwise the PID of the
#: kitty process is appended to the value, with a hyphen. This option
#: is ignored unless you also set allow_remote_control to enable
#: remote control. See the help for kitty --listen-on for more
#: details. Changing this option by reloading the config is not
#: supported.


#startup_session none
startup_session session.conf



allow_hyperlinks yes

#: Process hyperlink (OSC 8) escape sequences. If disabled OSC 8
#: escape sequences are ignored. Otherwise they become clickable
#: links, that you can click by with the mouse or the hints kitten
#: </kittens/hints>. The special value of ``ask`` means that kitty
#: will ask before opening the link when clicked.

cursor_shape block
shell_integration enabled no-cursor

#: Enable shell integration on supported shells. This enables features
#: such as jumping to previous prompts, browsing the output of the
#: previous command in a pager, etc. on supported shells.  Set to
#: ``disabled`` to turn off shell integration, completely. See
#: https://sw.kovidgoyal.net/kitty/shell-integration/ for details.

# term xterm-kitty
term xterm-256color


# notify_on_cmd_finish never


kitty_mod ctrl+shift

# kitty_mod has to be modifiers not keys, see
# https://github.com/kovidgoyal/kitty/discussions/3457#discussioncomment-587511
# so you can NOT do this:
#kitty_mod ctrl+a



#map kitty_mod+enter new_window
# disable this as can lead to window created by accident via press by ctrl+shift+v paste command and then press enter
map kitty_mod+enter no-op
# map cmd+enter       no-op

map ctrl+shift+[ no_op
map ctrl+shift+] no_op

map cmd+n new_os_window
map ctrl+n new_os_window

map cmd+t new_tab_with_cwd
map ctrl+t new_tab_with_cwd
map cmd+shift+t new_tab
map ctrl+shift+t new_tab

map cmd+w close_window
map ctrl+w close_window

# map cmd+] next_window
# map ctrl+] next_window

# map cmd+[ previous_window
# map ctrl+[ previous_window

map ctrl+a>period move_window_forward

map ctrl+a>comma move_window_backward

# map kitty_mod+t new_tab_with_cwd
# new_tab will not keep cwd, use `new_tab_with_cwd` instead or `launch --cwd=current --type=tab`
# see https://sw.kovidgoyal.net/kitty/faq/#how-do-i-open-a-new-window-or-tab-with-the-same-working-directory-as-the-current-window
# tmux like tab create via `--cwd=last_reported`, warning: this need kitty `shell_integration enabled`
map ctrl+a>c launch --cwd=last_reported --type=tab

map ctrl+a>/ set_tab_title

map ctrl+shift+down toggle_maximized
map ctrl+shift+up toggle_maximized

#: Increase font size
map ctrl+equal  change_font_size current +1.0
map ctrl+plus   change_font_size current +1.0
map ctrl+kp_add change_font_size current +1.0
map cmd+equal  change_font_size current +1.0
map cmd+plus   change_font_size current +1.0
map cmd+kp_add change_font_size current +1.0

map ctrl+shift+equal  change_font_size all +1.0
map ctrl+shift+plus   change_font_size all +1.0
map ctrl+shift+kp_add change_font_size all +1.0
map cmd+shift+equal  change_font_size all +1.0
map cmd+shift+plus   change_font_size all +1.0
map cmd+shift+kp_add change_font_size all +1.0

#: Decrease font size
map ctrl+minus       change_font_size current -1.0
map ctrl+kp_subtract change_font_size current -1.0
map cmd+minus       change_font_size current -1.0
map cmd+kp_subtract change_font_size current -1.0

map ctrl+shift+minus       change_font_size all -1.0
map ctrl+shift+kp_subtract change_font_size all -1.0
map cmd+shift+minus       change_font_size all -1.0
map cmd+shift+kp_subtract change_font_size all -1.0


#: Reset font size

map ctrl+0 change_font_size current 0
map cmd+0 change_font_size current 0
map ctrl+shift+0 change_font_size all 0
map cmd+shift+0 change_font_size all 0




map cmd+enter toggle_fullscreen
map ctrl+enter toggle_fullscreen


# map ctrl+a>e edit_config_file
map ctrl+a>e launch --type=tab nvim ~/.config/kitty/kitty.conf


#: Reload kitty.conf

map ctrl+a>r combine : load_config_file : launch --type=overlay --hold --allow-remote-control kitty @ send-text "kitty config reloaded"

#: Debug kitty configuration

map ctrl+a>d     debug_config



# BEGIN_KITTY_THEME
# Gruvbox Dark
include current-theme.conf
# END_KITTY_THEME

# default alphabet see https://github.com/kovidgoyal/kitty/blob/0c4b20aa4e6b29ccf7c389e15d7ff5189f8e98f5/kittens/hints/main.py#L125
# qwerty alphabets borrow from https://github.com/fcsonline/tmux-thumbs#Alphabets
map ctrl+a>space kitten hints --alphabet asdfqwerzxcvjklmiuopghtybn1234567890 --customize-processing custom-hints.py

map f3 kitten hints --program '*'

# https://github.com/console-rs/console/pull/85/files
# https://github.com/console-rs/console/pull/84
# map double ctrl+a to ctrl+a (home)
map ctrl+a>ctrl+a send_text all \x01

#map cmd+f launch --type=overlay --stdin-source=@screen_scrollback fzf --no-sort --no-mouse --exact -i --tac
map cmd+f show_scrollback
map ctrl+f show_scrollback
map cmd+g show_last_command_output
map ctrl+g show_last_command_output
map cmd+y launch --stdin-source=@last_cmd_output --type=clipboard

include open-actions.conf

# for neovim
map --when-focus-on var:in_editor cmd+w
map --when-focus-on var:in_editor ctrl+w
map --when-focus-on var:in_editor cmd+d
map --when-focus-on var:in_editor cmd+c
map --when-focus-on var:in_editor cmd+v
map --when-focus-on var:in_editor cmd+ctrl+left
map --when-focus-on var:in_editor cmd+ctrl+right
map --when-focus-on var:in_editor cmd+ctrl+up
map --when-focus-on var:in_editor cmd+ctrl+down
map --when-focus-on var:in_editor ctrl+alt+left
map --when-focus-on var:in_editor ctrl+alt+right
map --when-focus-on var:in_editor ctrl+alt+up
map --when-focus-on var:in_editor ctrl+alt+down
map --when-focus-on var:in_editor cmd+1
map --when-focus-on var:in_editor cmd+2
map --when-focus-on var:in_editor cmd+3
map --when-focus-on var:in_editor cmd+m
map --when-focus-on var:in_editor cmd+y
map --when-focus-on var:in_editor ctrl+f
map --when-focus-on var:in_editor cmd+f
map --when-focus-on var:in_editor cmd+g
map --when-focus-on var:in_editor ctrl+g
map --when-focus-on var:in_editor ctrl+enter
map --when-focus-on var:in_editor cmd+r
map --when-focus-on var:in_editor cmd+shift+r


